// Flexible dimensions.
// Self-contained and reusable, repeatable patterns.
// Module specific classes should be module name prefixed.
// Module subclass class names should be double-hyphened: module--subclass.
// High-level modules should not depend on low-level modules. Both should depend on abstractions.
// Use Icon Modules where appropriate.

// Examples
// accordion
// alerts
// carousel
// code
// dropdowns
// forms
// media
// modals

// For asset fonts
// [data-icon]:before {
//      content: attr(data-icon);
//      font-family: "AssetFont";
//      speak: none;
// }
// <a data-icon="&#xe012;" href="">Link Text</a>

@import "variables";

// breadcrumbs
// navbar
// nav
// pagination

//links
a {
	color:$primaryColor;
}

.highlight-primary {
	background-color: $primaryColor;
	color: $secondaryColor;
}

.highlight-primary a {
	color: $secondaryColor;
}

.highlight-secondary{
	background-color: $secondaryColor;
	color: $tertiaryColor;
}

.highlight-secondary a {
	color: $tertiaryColor;
}

.nav {
  @extend %no-p;
  @extend %no-bull;
}

.displayinline {


	li {
		@extend %l-il;
	}
}

.displayblock{
	
	li{
		@extend %l-db;
	}
}

.b-b {    
    border-bottom-style: solid;
}

// [fufu], .nav {
//   background: $primaryColor;
//   color: $secondaryColor;
//   a {
//     @extend %l-db;
//     @extend %pad-s;
//     color: $tertiaryColor;
//   }
// }

